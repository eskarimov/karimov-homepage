<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Блог on Evgenii Karimov</title><link>https://www.karimov.berlin/ru/writing/</link><description>Recent content in Блог on Evgenii Karimov</description><generator>Hugo -- gohugo.io</generator><language>RU</language><lastBuildDate>Tue, 15 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.karimov.berlin/ru/writing/index.xml" rel="self" type="application/rss+xml"/><item><title>Методы построения DWH</title><link>https://www.karimov.berlin/ru/writing/2021-04-30-dwh-structure-approaches/</link><pubDate>Tue, 15 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/ru/writing/2021-04-30-dwh-structure-approaches/</guid><description>В данной статье я бы хотел вкратце рассказать о самых известных подходах к построению хранилиз данных, а именно:
Inmon Kimball Data Vault Data Lake Lakehouse Важно заметить, что я не ставлю целью раскрыть все детали, так как каждая из этих концепций заслуживает отдельной подробной статьи.
Итак, поехали.
Inmon Начнём с подхода, созданного Биллом Инмоном, он подразумевает рассматривание организации сверху вниз, когда структура данных известна на всех уровнях, доступна цельная картина того, как данные передаются внутри компании, а сами данные смоделированы в соответствии с третьей нормальной формой.</description></item><item><title>Коннектин пипл</title><link>https://www.karimov.berlin/ru/writing/2021-02-25-clubhouse/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/ru/writing/2021-02-25-clubhouse/</guid><description>Приложение, доступное не всем, помогает тем, кому оно доступно, сделать малодоступным то, что было демократизировано и обесценено до предела - собственный пиздёж. Именно для этого ничего там не записывается и не сохраняется. То, что люди хранили как высшую ценность - знания - сейчас в таком диком перепроизводстве, что необходим потлач, ритуальное уничтожение.
Как заядлый алкоголик со стажем, золотой миллиард на секунду прерывается, чтобы выблевать лишнюю информацию, и, утирая рот, вновь возлегает за стол, где продолжает кормить ею друг друга.</description></item><item><title>Про современный подход к дата инжинирингу</title><link>https://www.karimov.berlin/ru/writing/2021-02-22-modern-data-eng-stack/</link><pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/ru/writing/2021-02-22-modern-data-eng-stack/</guid><description>Не секрет, что мы живем в быстро меняющемся мире, генерируя все больше и больше машинных данных. Наступила новая эра больших данных и прочее, что вы слышали сотни раз. Множество компаний хотят увеличить свою прибыль, используя анализ данных. Become data-driven стало новым трендом и девизом для многих Естественно, на этом фоне появилось много новых инструментов и проектов с открытым кодом.
Как они могут упростить эти задачи, и как сделать выбор между коммерческими продуктами и решениями с отрытым исходным кодом?</description></item><item><title>Заметки о системах каталогов данных</title><link>https://www.karimov.berlin/ru/writing/2021-01-25-data-catalog/</link><pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/ru/writing/2021-01-25-data-catalog/</guid><description>Каталог данных стал неотъемлемой частью современной инфраструктуры данных и управления ими. Это позволяет иметь единую точку входа для исследования и поиска данных организации, путем хранения метаданных о них, таких как местоположение, формат, столбцы / атрибуты и пр. Это становится особенно важно, когда команды внутри организации переходят к современным моделям менеджмента, таким как Data Mesh, когда каждая команда может вносить свой вклад в арсенал данных организации.
В отрасли растет интерес к повышению производительности труда дата-инженеров и сайентистов</description></item><item><title>Выбирая open-source систему комментариев</title><link>https://www.karimov.berlin/ru/writing/2021-01-11-comments-system/</link><pubDate>Mon, 11 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/ru/writing/2021-01-11-comments-system/</guid><description>Во время разработки этого сайта у меня, естественно, возникла идея добавить систему комментариев. Хотя Hugo, который я использую, поддерживает Disqus «из коробки», я не очень этому рад из-за довольно противоречивых мнений по поводу сохранения приватности и общей тяжеловесности Disqus’а.
Я начал искать альтернативы и остановился на Commento - выглядит довольно легким и простым в настройке.
Итак, я все настроил, добавил JS / HTML и был уже готов наслаждаться, однако внезапно, когда я попытался подключить Github в качестве OAuth, я обнаружил, что Github изменил структуру ответа для запросов аутентификации, а Commento еще не поддерживает ее.</description></item><item><title>Переход на Notion после многих лет использования OneNote</title><link>https://www.karimov.berlin/ru/writing/2020-12-16-notion-vs-onenote/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/ru/writing/2020-12-16-notion-vs-onenote/</guid><description>OneNote был моим основным инструментов для коллекционирования заметок на протяжении многих лет. Впервые я начал использовать его давным-давно, может лет 10 назад, в эпоху существования телефонов на Windows.
Всё вроде бы устраивало, но во время чтения статьи про метод ведения записей &amp;ldquo;Zettelkasten&amp;rdquo; (очень рекомендую, кстати), я понял, что возможно мне следует пересмотреть мои методы и инструменты ведения заметок и попробовать что-то позволяющее связывать разные заметки друг с другом. Случайная картинка из интернета при поиске Zettelkasten метода</description></item><item><title>Некоторые заметки после плотной работы с Spark/AWS Glue</title><link>https://www.karimov.berlin/ru/writing/2020-11-23-lessons-learned-spark-glue/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/ru/writing/2020-11-23-lessons-learned-spark-glue/</guid><description>Случайные и не очень заметки из Ноушн после парочки проектов на Spark и AWS Glue:
Parquet не поддерживает пустые массивы. Эволюция схемы поломана в Spark 2.4 для ORC формата. Очень жду поддержку ZSTD компрессию для ORC формата в Спарке. Всегда проверяй, что разные фишки работают, как ожидаешь - например, динамическое партиционирование внезапно не работает в случае broadcast join&amp;rsquo;ов на AWS Glue, а читает весь датасет с левой части. (нужно проверить, как обстоят дела в Spark 3.</description></item></channel></rss>