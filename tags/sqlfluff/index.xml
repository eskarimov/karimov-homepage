<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>sqlfluff on Evgenii Karimov</title><link>https://www.karimov.berlin/tags/sqlfluff/</link><description>Recent content in sqlfluff on Evgenii Karimov</description><generator>Hugo -- gohugo.io</generator><language>EN</language><lastBuildDate>Mon, 04 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.karimov.berlin/tags/sqlfluff/index.xml" rel="self" type="application/rss+xml"/><item><title>Combining dbt and SQLFluff</title><link>https://www.karimov.berlin/writing/2022-07-04-dbt-sqlfluff/</link><pubDate>Mon, 04 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/writing/2022-07-04-dbt-sqlfluff/</guid><description>In this post I&amp;rsquo;d like to share how to adopt two very useful tools SQLFluff, a SQL linter, and dbt, a data modelling tool, into a powerful combination and make it work with pre-commit to ensure all your SQLs are properly formatted.
Why to combine them at all? There are a lot of ways to write SQL: leading/trailing commas, lower-upper case of keywords, aliasing table and column names, etc.
Since every data engineer and analyst spends a lot of time reading SQL code, having a standard style helps to improve this process and also makes writing less error-prone.</description></item></channel></rss>