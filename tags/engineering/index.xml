<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>engineering on Evgenii Karimov</title><link>https://www.karimov.berlin/tags/engineering/</link><description>Recent content in engineering on Evgenii Karimov</description><generator>Hugo -- gohugo.io</generator><language>EN</language><lastBuildDate>Tue, 05 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.karimov.berlin/tags/engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Thoughts about the modern data engineering stack</title><link>https://www.karimov.berlin/writing/2022-04-05-thoughts-about-data-stack/</link><pubDate>Tue, 05 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/writing/2022-04-05-thoughts-about-data-stack/</guid><description>Random thoughts about the modern data engineering stack - the modern stack should be the best from the beginning, or at least aiming to be so.
It means any required vendor solutions should be onboarded as early as possible, obviously given the platform vision and financial situation at hand.
There&amp;rsquo;s no point re-inventing the wheel unless you&amp;rsquo;re trying to solve a unique use-case, which might be the truth for huge data systems like Netflix or Google has.</description></item><item><title>Reverse ETL - definition and use-cases</title><link>https://www.karimov.berlin/writing/2021-11-18-reverse-etl/</link><pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/writing/2021-11-18-reverse-etl/</guid><description>In this article I&amp;rsquo;d like to summarise my knowledges and understanding of the new buzzword Reverse ETL.
No long introductions, let&amp;rsquo;s jump into the topic.
Let&amp;rsquo;s start with definitions, what is ETL and Reverse ETL?
ETL (Extract-Transform-Load) - a common term for data integration, a process of bringing data from sources to your datawarehouse, or data lake.
Modern data storage and analytics vendors also recommend utilising ELT approach, when transformations and aggregations happen after the load into the datastore.</description></item><item><title>Some lessons learned working with Spark/AWS Glue</title><link>https://www.karimov.berlin/writing/2020-11-23-lessons-learned-spark-glue/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.karimov.berlin/writing/2020-11-23-lessons-learned-spark-glue/</guid><description>Random general and specific notes from Notion made after a couple of projects working with Spark/AWS Glue:
Parquet format doesn&amp;rsquo;t support empty arrays Schema evolution in Spark 2.4 for ORC format is broken Looking forward for ZSTD compression for ORC format. Always check that desired features work as expected - apparently dynamic partitioning pruning doesn&amp;rsquo;t work in AWS Glue as expected with broadcast join, reading the whole dataset on the left side.</description></item></channel></rss>